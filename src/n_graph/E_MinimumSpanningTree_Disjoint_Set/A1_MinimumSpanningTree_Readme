
https://takeuforward.org/data-structure/minimum-spanning-tree-theory-g-44/
https://www.youtube.com/watch?v=ZSPjZuZWCME



https://takeuforward.org/data-structure/minimum-spanning-tree-theory-g-44/
A spanning tree is a tree in which we have N nodes(i.e. All the nodes present in the original graph) and N-1 edges and all nodes are reachable from each other.

Let’s understand this using an example.
Assume we are given an undirected weighted graph with N nodes and M edges. Here in this example, we have taken N as 5 and M as 6.


Note: Point to remember is that a graph may have more than one spanning trees.

All the above spanning trees contain some edge weights.
For each of them, if we add the edge weights we can get the sum for that particular tree. Now, let’s try to figure out the minimum spanning tree:

Minimum Spanning Tree:
Among all possible spanning trees of a graph, the minimum spanning tree is the one for which the sum of all the edge weights is the minimum.


Note: There may exist multiple minimum spanning trees for a graph like a graph may have multiple spanning trees.

There are a couple of algorithms that help us to find the minimum spanning tree of a graph.
One is Prim’s algorithm and the other is Kruskal’s algorithm. We will be discussing all of them in the upcoming articles.



there are two ways to find the minimum spanning tree for a given weighted and undirected graph.
    Prim’s algorithm.
    Kruskal's Algorithm