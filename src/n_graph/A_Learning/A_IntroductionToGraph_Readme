https://takeuforward.org/graph/introduction-to-graph/
https://youtu.be/M3_pLsDdeuU



Graph types :
Connected/ Not Connected
Directed / UnDirected
Cyclic / Acyclic
Positive Weight/ Negative Weight


Undirected Graph BFS complexity :
    Time Complexity: O(N) + O(2E), Where N = Nodes, 2E is for total degrees as we traverse all adjacent nodes.
    Space Complexity: O(3N) ~ O(N), Space for queue data structure visited array and an adjacency list

Undirected Graph BFS complexity :
    Time Complexity: For an undirected graph, O(N) + O(2E),
                     For a directed graph, O(N) + O(E),
                     Because for every node we are calling the recursive function once,
                     the time taken is O(N) and 2E is for total degrees as we traverse for all adjacent nodes.
    Space Complexity: O(3N) ~ O(N), Space for bfs stack space, visited array and an adjacency list.


Topological Sort BFS :

    Time Complexity: O(V+E)+O(V), where V = no. of nodes and E = no. of edges.
                        There can be at most V components. So, another O(V) time complexity.

    Space Complexity: O(2N) + O(N) ~ O(2N): O(2N) for the visited array
                        and the stack carried during DFS calls and O(N) for recursive stack space,
                            where N = no. of nodes.